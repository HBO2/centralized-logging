apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wso2-elastic-search
spec:
  replicas: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        deployment: wso2-elastic-search
    spec:
      containers:
      - name: wso2-elastic-search
        image: docker.elastic.co/elasticsearch/elasticsearch:6.5.3
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - nc -z localhost 9200
          initialDelaySeconds: 20
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - nc -z localhost 9200
          initialDelaySeconds: 20
          periodSeconds: 5
        imagePullPolicy: Always
        ports:
        -
          containerPort: 9200
          protocol: "TCP"
        -
          containerPort: 9300
          protocol: "TCP"
---
apiVersion: v1
kind: Service
metadata:
  name: wso2-elasticsearch-service
spec:
  selector:
    deployment: wso2-elastic-search
  ports:
    -
      name: pass-through-http
      protocol: TCP
      port: 9200
    -
      name: pass-through-http
      protocol: TCP
      port: 9300
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wso2-kibana
spec:
  replicas: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        deployment: wso2-kibana
    spec:
      containers:
      - name: wso2-kibana
        image: docker.elastic.co/kibana/kibana:6.5.3
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - nc -z localhost 5601
          initialDelaySeconds: 20
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - nc -z localhost 5601
          initialDelaySeconds: 10
          periodSeconds: 5
        imagePullPolicy: Always
        ports:
        -
          containerPort: 5601
          protocol: "TCP"
---
apiVersion: v1
kind: Service
metadata:
  name: wso2-kibana-service
spec:
  selector:
    deployment: wso2-kibana
  ports:
    -
      name: pass-through-http
      protocol: TCP
      port: 5601
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wso2-kibana-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
  - hosts:
    - wso2-kibana
  rules:
  - host: wso2kibana
    http:
      paths:
      - path: /
        backend:
          serviceName: wso2-kibana-service
          servicePort: 5601